import time
from src.speech_recognizer import SpeechRecognizer
from src.nlp_analyzer import NLPAnalyzer

def main():
    print("=== Sistema de Reconhecimento de Fala para PLN ===")
    
    try:
        speech_recognizer = SpeechRecognizer()
        
        # Testa microfone primeiro
        print("\nüß™ Testando microfone...")
        if not speech_recognizer.test_microphone():
            print("‚ö†Ô∏è Problema detectado no microfone!")
            proceed = input("Continuar mesmo assim? (s/n): ")
            if proceed.lower() != 's':
                return
        
        print("\n‚úÖ Sistema pronto!")
        
        # Menu de op√ß√µes
        while True:
            print("\n" + "="*50)
            print("üìã OP√á√ïES DISPON√çVEIS:")
            print("1 - Apenas transcrever fala")
            print("2 - Transcrever e analisar problemas comuns de PLN")
            print("0 - Sair")
            
            choice = input("\nEscolha uma op√ß√£o: ").strip()
            
            if choice == "0":
                break
            elif choice == "1":
                transcribe_only_mode(speech_recognizer)
            elif choice == "2":
                transcribe_and_analyze_mode(speech_recognizer)
            else:
                print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
                
    except KeyboardInterrupt:
        print("\n\nüëã Saindo do sistema...")
    except Exception as e:
        print(f"‚ùå Erro: {e}")

def transcribe_only_mode(speech_recognizer):
    """Modo apenas transcri√ß√£o"""
    print("\n" + "="*50)
    print("üé§ MODO: APENAS TRANSCRI√á√ÉO")
    print("üí° Instru√ß√µes:")
    print("   - Pressione e SEGURE SPACE para gravar")
    print("   - Fale enquanto segura a tecla")
    print("   - Solte SPACE para parar e processar")
    print("   - Digite 'voltar' para retornar ao menu")
    
    while True:
        print("\nüé§ Pronto para transcrever...")
        
        # Escuta e grava
        audio_data = speech_recognizer.listen_for_speech()
        
        if audio_data:
            # Transcreve
            text = speech_recognizer.transcribe_audio(audio_data)
            print(f"\nüìù Transcrito: '{text}'")
            
            if not text or "N√£o foi poss√≠vel" in text or "Erro" in text:
                print("‚ùå Transcri√ß√£o n√£o foi bem-sucedida")
                print("üí° Dicas:")
                print("   - Fale mais alto e claro")
                print("   - Segure SPACE por mais tempo")
                print("   - Verifique conex√£o com internet")
        else:
            print("‚ùå Nenhum √°udio capturado")
            print("üí° Dicas:")
            print("   - Fale mais alto")
            print("   - Segure SPACE por mais tempo")
            print("   - Verifique se o microfone est√° funcionando")
        
        # Pergunta se quer continuar
        continue_choice = input("\nContinuar transcrevendo? (s/n): ").strip().lower()
        if continue_choice != 's':
            break

def transcribe_and_analyze_mode(speech_recognizer):
    """Modo transcri√ß√£o + an√°lise"""
    nlp_analyzer = NLPAnalyzer()
    
    print("\n" + "="*50)
    print("üé§ MODO: TRANSCRI√á√ÉO + AN√ÅLISE PLN")
    print("üí° Instru√ß√µes:")
    print("   - Pressione e SEGURE SPACE para gravar")
    print("   - Fale enquanto segura a tecla")
    print("   - Solte SPACE para parar e processar")
    print("\nüéØ Frases de teste sugeridas:")
    print("   - 'Let's eat grandma' (problema de v√≠rgula)")
    print("   - 'There are two pears on the table' (hom√≥fonos)")
    
    while True:
        print("\nüé§ Pronto para gravar e analisar...")
        
        # Escuta e grava
        audio_data = speech_recognizer.listen_for_speech()
        
        if audio_data:
            # Transcreve
            text = speech_recognizer.transcribe_audio(audio_data)
            print(f"\nüìù Transcrito: '{text}'")
            
            # Analisa se transcri√ß√£o foi bem-sucedida
            if text and "N√£o foi poss√≠vel" not in text and "Erro" not in text:
                problems = nlp_analyzer.analyze_speech_text(text)
                nlp_analyzer.display_detailed_analysis(problems)
            else:
                print("‚ùå Transcri√ß√£o n√£o foi bem-sucedida")
                print("üí° Dicas:")
                print("   - Fale mais alto e claro")
                print("   - Segure SPACE por mais tempo")
                print("   - Verifique conex√£o com internet")
        else:
            print("‚ùå Nenhum √°udio capturado")
            print("üí° Dicas:")
            print("   - Fale mais alto")
            print("   - Segure SPACE por mais tempo")
            print("   - Verifique se o microfone est√° funcionando")
        
        # Pergunta se quer continuar
        continue_choice = input("\nContinuar transcrevendo e analisando? (s/n): ").strip().lower()
        if continue_choice != 's':
            break

if __name__ == "__main__":
    main()